{"version":3,"sources":["shuffle.tsx","Map.tsx","Geolocated/Map.tsx","Geolocated/Geolocated.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["shuffle","a","i","length","j","Math","floor","random","Mode","DEFAULT_FILL","WRONG_FILL","CORRECT_FILL","Map","useState","missed","setMissed","neighbToFind","setNeighb","data","features","map","d","properties","name","allNeighbs","setAllNeighbs","selected","setSelected","game","mode","setMode","rootRef","useMemo","createRef","svg","useRef","tooltipRef","resetBoard","d3","style","startGame","nextNeighb","useCallback","slice","alert","skip","concat","applyMouseover","el","text","on","current","top","event","pageY","left","pageX","visibility","innerHTML","removeMouseover","useEffect","each","this","filter","includes","dd","misses","selectAll","eventHandler","useLayoutEffect","ref","width","window","outerWidth","height","outerHeight","append","attr","projection","geoMercator","scale","translate","precision","path","geoPath","bounds","xScale","abs","yScale","transl","enter","id","margin","className","type","onClick","float","JSON","stringify","learn","position","props","location","lat","lon","accuracy","accuracyRadius","scaledRadius","centroid","clat","clon","select","circumference","PI","angle","circle","center","radius","console","log","join","update","PleaseEnableGeo","CurrentNeighb","neighb","GeolocationIsNotEnabled","geolocated","positionOptions","enableHighAccuracy","watchPosition","userDecisionTimeout","coords","latitude","longitude","find","insidePolygon","toLatLon","isGeolocationEnabled","isGeolocationAvailable","to","href","substr","replace","App","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.946b46be.chunk.js","sourcesContent":["export default function shuffle(a: string[]): string[] {\n  for (let i = a.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [a[i], a[j]] = [a[j], a[i]];\n  }\n  return a;\n}\n","import * as d3 from 'd3';\nimport { Selection, event } from 'd3';\nimport { geoMercator, geoPath } from 'd3-geo';\nimport React, { useEffect, createRef, useState, useLayoutEffect, useRef, useMemo, useCallback } from 'react';\nimport data from './geojson.json';\nimport shuffle from './shuffle';\n\nconst DEFAULT_FILL = 'rgb(175, 157, 150)';\nconst WRONG_FILL = 'red';\nconst CORRECT_FILL = 'green';\n\nenum Mode {\n  game,\n  learn,\n}\n\nexport default function Map(): JSX.Element {\n  const [missed, setMissed] = useState<string[]>([]);\n  const [neighbToFind, setNeighb] = useState();\n  const [allNeighbs, setAllNeighbs] = useState(shuffle(data.features.map((d) => d.properties.name)));\n  const [selected, setSelected] = useState();\n  const [mode, setMode] = useState<Mode>(Mode.game);\n  const rootRef = useMemo(() => createRef<HTMLDivElement>(), []);\n  let svg = useRef<Selection<SVGSVGElement, unknown, null, undefined>>();\n\n  const tooltipRef = useRef() as React.MutableRefObject<HTMLInputElement>;\n\n  function resetBoard() {\n    setAllNeighbs(shuffle(data.features.map((d) => d.properties.name)));\n    setMissed([]);\n    d3.selectAll('svg path').style(\"fill\", DEFAULT_FILL).style(\"stroke\", \"#ffffff\");\n  }\n\n  function startGame() {\n    resetBoard();\n    nextNeighb();\n  }\n\n  const nextNeighb = useCallback(function nextNeighb() {\n    setNeighb(allNeighbs[0]);\n    setAllNeighbs(allNeighbs.slice(1));\n    if (allNeighbs.length === 0) {\n      alert(`game done. Score ${(1-(missed.length/data.features.length))*100}% correct`);\n    }\n  }, [allNeighbs, missed.length])\n\n  function skip() {\n    setNeighb(allNeighbs[0]);\n    setAllNeighbs(allNeighbs.slice(1).concat(neighbToFind));\n  }\n\n  const applyMouseover = useCallback((el: Selection<d3.BaseType, {}, null, undefined>, text: string | ((d: any) => string)) => {\n    return el.on(\"mousemove\", function(d: any){\n      if (tooltipRef.current) {\n        tooltipRef.current.style.top = (event.pageY-10)+\"px\";\n        tooltipRef.current.style.left = (event.pageX+10)+\"px\";\n        tooltipRef.current.style.visibility = 'visible';\n        tooltipRef.current.innerHTML = typeof text === 'function' ? text(d) : text;\n      }\n    })\n    .on(\"mouseout\", function(){\n      if (tooltipRef.current) {\n        tooltipRef.current.style.visibility = 'hidden';\n      }\n    });\n  },[tooltipRef]);\n\n  const removeMouseover = useCallback((el: Selection<d3.BaseType, {}, null, undefined>) => {\n    return el.on(\"mousemove\", null).on(\"mouseout\", null);\n  },[])\n\n  useEffect(\n    () => {\n      if (mode === Mode.game) {\n        d3.selectAll('svg path')\n          .each(function(this: any) { removeMouseover(d3.select(this))});\n        resetBoard();\n      } else {\n        d3.selectAll('svg path')\n          .each(function(this: any, d: any) { applyMouseover(d3.select(this), d.properties.name)})\n      }\n    },\n    [applyMouseover, mode, removeMouseover]\n  );\n\n  useEffect(\n    () => {\n      if (!selected) {\n        return;\n      }\n\n      d3.selectAll('svg path').filter((d: any) => d.properties.name === selected)\n        .style('fill', '#FFEB3B');\n      return () => {\n        d3.selectAll('svg path').filter((d: any) => d.properties.name === selected)\n        .style('fill', function(d: any) {\n          if (allNeighbs.includes(d.properties.name)) {\n            return DEFAULT_FILL;\n          }\n          else if (missed.includes(d.properties.name)) {\n            return WRONG_FILL;\n          }\n          return CORRECT_FILL;\n        })}\n    },\n    [selected, allNeighbs, missed]\n  );\n\n  useEffect(\n    () => {\n      if (!neighbToFind) {\n        return;\n      }\n\n      function eventHandler(this: any, d: any) {\n        if (d.properties.name !== selected) {\n          return setSelected(d.properties.name);\n        }\n        else if (d.properties.name === neighbToFind) {\n          d3.selectAll('svg path').filter((dd: any) => d.properties.name === dd.properties.name)\n            .each(function(el: any){\n              d3.select(this).style('fill', CORRECT_FILL).style('opacity', 1);\n              applyMouseover(d3.select(this), el.properties.name);\n            })\n        } else {\n          d3.selectAll('svg path').filter((dd: any) => neighbToFind === dd.properties.name)\n            .each(function(el: any){\n              d3.select(this).style('fill', WRONG_FILL).style('opacity', 1)\n              applyMouseover(d3.select(this), el.properties.name);\n            })\n          setMissed((misses) => misses.concat(neighbToFind));\n        }\n        if (svg.current) {\n          svg.current.selectAll('path').on('mouseover', function() {\n            d3.select(this).style('opacity', 0.5);\n          });\n        }\n        setSelected(null);\n        nextNeighb();\n      }\n\n      d3.selectAll('path')\n        .on('click', (d: any) => [...allNeighbs, neighbToFind].includes(d.properties.name) ? eventHandler(d) : null );\n    },\n    [neighbToFind, nextNeighb, allNeighbs, selected, tooltipRef, applyMouseover]\n  )\n\n  useLayoutEffect(\n    () => {\n      \n      const ref = rootRef.current;\n      if (!ref) {\n        return;\n      }\n\n      const width = window.outerWidth;\n      const height = window.outerHeight - 200;\n      svg.current = d3.select(ref).append(\"svg\").attr(\"width\", width).attr(\"height\", height);\n\n      const projection = geoMercator().scale(1).translate([0, 0]).precision(0);\n      const path = geoPath().projection(projection);\n      const bounds = path.bounds(data as any);\n\n      const xScale = width / Math.abs(bounds[1][0] - bounds[0][0]);\n      const yScale = height / Math.abs(bounds[1][1] - bounds[0][1]);\n      const scale = xScale < yScale ? xScale : yScale;\n\n      const transl: [number, number] = [(width - scale * (bounds[1][0] + bounds[0][0])) / 2, (height - scale * (bounds[1][1] + bounds[0][1])) / 2];\n      projection.scale(scale).translate(transl);\n\n      svg.current.selectAll(\"path\")\n        .data(data.features)\n        .enter()\n        .append(\"path\")\n        .attr(\"d\", path as any)\n        .attr('data-id', (d: any) => d.id)\n        .attr('data-name', (d: { properties: { name: string; }; }) => d.properties.name)\n        .attr('id', (d: { properties: { name: string; }; }) => d.properties.name)\n        .attr('pointer-events', 'all')\n        .style(\"fill\", DEFAULT_FILL).style(\"stroke\", \"#ffffff\");\n\n      svg.current.selectAll('path').on('mouseover', function() {\n        d3.select(this).style('opacity', 0.5);\n      });\n      svg.current.selectAll('path').on('touchend', function() {\n        d3.select(this).style('opacity', 1);\n      });\n      svg.current.selectAll('path').on('mouseleave', function() {\n        d3.select(this).style('opacity', 1);\n      });\n    },\n    [rootRef]\n  );\n\n  const GameMode = () => (\n    mode === Mode.game \n    ? (\n      <div className=\"pure-u-1 pure-u-md-1-3\">\n        <button type=\"button\" onClick={startGame} id=\"start-game-btn\">Start New Game</button>\n        { neighbToFind && <div>\n          <div><p>Can you find and click on {neighbToFind}?</p></div>\n          <div><button type=\"button\" onClick={skip}>Skip and come back later</button></div>\n          </div>}\n      </div>\n    ) : (\n      <div/>\n    )\n  )\n\n  const BottomRow = () => mode === Mode.learn\n    ? (\n      <div className=\"pure-u-1 pure-u-md-1-3\">\n        <span>Ready to try again?  <button type=\"button\" onClick={() => { setMode(Mode.game); startGame(); } }>Start Game</button></span>\n      </div>\n    )\n    : (\n      <div className=\"pure-u-1 pure-u-md-1-3\">\n        <span>Having trouble? <button type=\"button\" onClick={() => setMode(Mode.learn)}> Quit the quiz and learn the neighbs </button></span>\n      </div>\n    )\n\n  return (\n    <div>\n\n      <div style={{margin: 'auto auto'}} className=\"pure-g\">\n        <div className=\"pure-u-1 pure-u-md-1-3\">\n          <GameMode />\n        </div>\n        <div ref={rootRef} className=\"pure-u-1\"/>\n        { mode === Mode.game && (\n          <aside style={{float: 'right'}} className=\"pure-u-1 ure-u-md-1-2\">\n            <h4>Missed Neighbs</h4>\n            <pre>{JSON.stringify(missed, null, 2)}</pre>\n          </aside>\n        )}\n        <BottomRow />\n      </div>\n      <div id=\"tooltip\" ref={tooltipRef} style={{position: 'absolute', 'zIndex': 10, visibility: 'hidden'}}></div>\n    </div>\n\n  );\n}\n","import * as d3 from 'd3';\nimport { Selection } from 'd3';\nimport { geoMercator, geoPath } from 'd3-geo';\nimport React, { createRef, useLayoutEffect, useRef, useMemo } from 'react';\nimport data from '../geojson.json';\n\nconst DEFAULT_FILL = 'rgb(175, 157, 150)';\n\ninterface IProps {\n  location: {\n    lat?: number, \n    lon?: number,\n    accuracy?: number,\n  }\n}\n\nexport default function Map(props: IProps): JSX.Element {\n  const rootRef = useMemo(() => createRef<HTMLDivElement>(), []);\n  let svg = useRef<Selection<SVGSVGElement, unknown, null, undefined>>();\n\n  const tooltipRef = useRef() as React.MutableRefObject<Selection<SVGTextElement, any, null, undefined>>;\n\n  const { location: { lat, lon, accuracy }} = props;\n\n  const projection = useMemo(\n    () => geoMercator().scale(1).translate([0, 0]).precision(0),\n    []\n  )\n\n  const accuracyRadius = useMemo(() => {\n\n    if (accuracy) {\n      const width = window.outerWidth, height = window.outerHeight * 0.8;\n      //variables for scaling circle radius\n      const totPixels = (width * height);\n      const totWorldMeters = 510000000000;\n      const metersPerPixel = (totWorldMeters / totPixels);\n\n      //scale the radius given in meters to pixels on the map\n      let scaledRadius = (100 * (accuracy / metersPerPixel));\n      debugger\n      if(scaledRadius < 2) {\n          scaledRadius = 2;\n      }\n      // var circumference = 6371000 * Math.PI * 2;\n\n      // var angle = accuracy / circumference * 360;\n\n      // var circle = d3.geoCircle().center([lat,lon]).radius(angle);\n      return scaledRadius;\n    }\n  }, [accuracy])\n\n  useLayoutEffect(\n    () => {\n      \n      const ref = rootRef.current;\n      if (!ref) {\n        return;\n      }\n\n      const width = window.outerWidth, height = window.outerHeight * 0.8;\n      svg.current = d3.select(ref).append(\"svg\").attr(\"width\", width).attr(\"height\", height);\n\n      const path = geoPath().projection(projection);\n      const bounds = path.bounds(data as any);\n\n      const xScale = width / Math.abs(bounds[1][0] - bounds[0][0]);\n      const yScale = height / Math.abs(bounds[1][1] - bounds[0][1]);\n      const scale = xScale < yScale ? xScale : yScale;\n\n      const transl: [number, number] = [(width - scale * (bounds[1][0] + bounds[0][0])) / 2, (height - scale * (bounds[1][1] + bounds[0][1])) / 2];\n      projection.scale(scale).translate(transl);\n\n      svg.current.selectAll(\"path\")\n        .data(data.features)\n        .enter()\n        .append(\"path\")\n        .attr(\"d\", path as any)\n        .attr('data-id', (d: any) => d.id)\n        .attr('data-name', (d: { properties: { name: string; }; }) => d.properties.name)\n        .attr('id', (d: { properties: { name: string; }; }) => d.properties.name)\n        .attr('pointer-events', 'all')\n        .style(\"fill\", DEFAULT_FILL).style(\"stroke\", \"#ffffff\")\n        .on(\"mousemove\", function(d: any){\n          if (!tooltipRef.current && svg.current) {\n            tooltipRef.current = svg.current.append('text')\n          }\n          const [clat, clon] = path.centroid(d)\n          if (svg.current) {\n            svg.current.select('text')\n              .attr('y', clon)\n              .attr('x', clat)\n              .text(d.properties.name)\n              .attr('text-anchor', 'middle')\n              .attr('pointer-events', 'none')\n          }\n        })\n        .on(\"mouseout\", function(){\n          if (tooltipRef.current && svg.current) {\n            svg.current.select('text').text('')\n          }\n        });\n\n      svg.current.selectAll('path').on('mouseover', function() {\n        d3.select(this).style('opacity', 0.5);\n      });\n      svg.current.selectAll('path').on('touchend', function() {\n        d3.select(this).style('opacity', 1);\n      });\n      svg.current.selectAll('path').on('mouseleave', function() {\n        d3.select(this).style('opacity', 1);\n      });\n      d3.select(\"svg\").attr(\"align\",\"center\")\n    },\n    [projection, rootRef, tooltipRef]\n  );\n\n  useLayoutEffect(() => {\n    if (svg.current && lat && lon && accuracy) {\n      const circumference = 6371000 * Math.PI * 2;\n\n      const angle = accuracy / circumference * 360;\n\n      const circle = d3.geoCircle().center([lon, lat]).radius(angle);\n      const path = geoPath().projection(projection);\n      console.log('status quo', projection([lon, lat]))\n      console.log('circle', path(circle(lon, lat)))\n\n      // svg.current.append(\"path\")\n      //   .attr('class', 'location')\n      //   .attr(\"d\", path(circle()) || 10)\n      //   .attr(\"fill\", \"steelblue\");\n\n      svg.current.selectAll('path.location')\n        .data([lon, lat])\n        .join(\n          (enter) => enter\n            .append(\"path\")\n            .attr(\"d\", path(circle()) || 10)\n            .attr(\"fill\",\"red\"),\n          (update) => update\n            .attr('d', path(circle()) || 10)\n            \n        )\n      // svg.current.selectAll('circle')\n      //   .data([[lon, lat]])\n      //   .join(\n      //     (enter) => enter\n      //       .append('circle')\n      //       .attr('cx', (d: any) => (projection(d) as number[])[0])\n      //       .attr('cy', (d: any) => (projection(d) as number[])[1])\n      //       .attr(\"r\", function([x, y], ...args) {\n      //         return accuracyRadius || '8px'\n      //       })\n      //       .attr(\"fill\", \"red\"),\n      //     (update) => update\n      //       .attr('cx', (d: any) => (projection(d) as number[])[0])\n      //       .attr('cy', (d: any) => (projection(d) as number[])[1])\n      //   )\n    }\n\n  },[accuracy, accuracyRadius, lat, lon, projection])\n\n  return (\n    <div style={{margin: 'auto auto'}}>\n      <div ref={rootRef}/>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport {geolocated, GeolocatedProps } from 'react-geolocated';\nimport { insidePolygon, toLatLon } from 'geolocation-utils';\nimport data from '../data.json';\nimport Map from './Map';\n\nfunction PleaseEnableGeo() {\n  return <div>\n    <span>Please enable geolocation to find your location in the city.</span>\n  </div>\n}\n\nfunction CurrentNeighb({ neighb }: { neighb: string }) {\n  return <div>\n    <span>Current Neighbourhood {neighb}</span>\n  </div>\n}\n\nfunction GeolocationIsNotEnabled() {\n  return (<div>\n    <span>Geolocation is not available.</span>\n  </div>)\n}\n\nfunction Geolocated(props: GeolocatedProps) {\n  const [neighb, setNeighb] = useState<string>();\n  const { latitude: lat, longitude: lon, accuracy } = props.coords || {};\n  useEffect(\n    () => {\n      if (lat && lon) {\n        const neighb = data.find((d) => insidePolygon(\n          toLatLon({lat, lon}), \n          d['the_geom'].map(([lat, lon]) => ({ lat, lon })))\n        );\n        if (neighb) {\n          setNeighb(neighb.name);\n        }\n      }\n    },\n    [lat, lon]\n  );\n  const { isGeolocationEnabled, isGeolocationAvailable } = props;\n  return (\n    <div>\n      { !isGeolocationEnabled && <PleaseEnableGeo />}\n      { !isGeolocationAvailable && <GeolocationIsNotEnabled />}\n      { neighb && <CurrentNeighb neighb={neighb} />}\n      <Map location={{lat, lon, accuracy}} />\n      <div>\n        <span>Think you know SF well?  <Link to=\"/quiz\">Take our neighbourhood quiz</Link></span>\n      </div>\n\n    </div>\n  );\n}\n\n\nexport default geolocated({\n  positionOptions: {\n    enableHighAccuracy: true,\n  },\n  watchPosition: true,\n  userDecisionTimeout: 5000,\n})(Geolocated);","import React from 'react';\nimport { HashRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\nimport './App.scss';\nimport 'purecss';\nimport Map from './Map';\nimport Geolocated from './Geolocated/Geolocated';\n\nif (process.env.NODE_ENV === 'production') {\n  if(window.location.href.substr(0,5) !== 'https'){\n    window.location.href = window.location.href.replace('http', 'https');\n  }\n}\n\n\nconst App: React.FC = () => {\n  return (\n    <Router>\n      <div className=\"App\">\n        <div>\n          \n          <Switch>\n            <Route path=\"/location\">\n              <Geolocated />\n            </Route>\n            <Route path=\"/quiz\">\n              <Map />\n            </Route>\n            <Route>\n              <Redirect to=\"/location\" />\n            </Route>\n          </Switch>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}